// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package robot.commands.auto;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import robot.commands.*;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import robot.subsystems.drivetrainSubSys;
import robot.subsystems.payloadSubSys;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class autoSingleCmdGrp extends SequentialCommandGroup {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public autoSingleCmdGrp(drivetrainSubSys drivetrainSubSys, payloadSubSys payloadSubSys){

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    addCommands(
        // Add Commands here:
        // Also add parallel commands using the
        //
        // addCommands(
        //      new command1(argsN, subsystem),
        //      parallel(
        //          new command2(argsN, subsystem),
        //          new command3(argsN, subsystem)
        //      )    
        //  );

        // ***************************************************************
        // **** Line up the robot parallel with the front line        ****
        // ***************************************************************

        // Extend the intake mechanism to capture ball
        new resetGyroCmd(drivetrainSubSys),
        new intakeExtendCmd(payloadSubSys),
        new delayCmd(0.75),

        // Slight reverse Arc to pickup the ball
        // driveSwingTurnCmd(speed, rotation, dist,  hdg,   mode,   brakeFlag, timeOut, subsystem)
        new driveSwingTurnCmd(-0.3,  -0.4,    -15.0,  0,   "DIST",    false,      3,     drivetrainSubSys),

        // Keep on going backwards to get fully out of the box
        // driveCmd( dist,   pwr,   hdg,       mode,          timeOut, brakeFlag, subsystem)
        new driveCmd(-36,   -0.4,    0,  "CURRENT_HEADING",      8,      true,     drivetrainSubSys),
        
        // We have the ball now so retract intake mechanism
        new intakeRetractCmd(payloadSubSys),
        
        // Drive fwd with new heading to arc back in toward the goal
        // driveCmd( dist,   pwr,   hdg,       mode,          timeOut, brakeFlag, subsystem)
        new driveCmd(  60,    0.4,   -25,   "NEW_HEADING",        10,      true,   drivetrainSubSys),
        // Swing turn instead of driveCmd?
        
        // Were there so shoot the ball
        new shooterFireOnCmd(true, payloadSubSys),
        new delayCmd(2.0),
        new shooterFireOffCmd(payloadSubSys)

        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
